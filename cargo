#!/bin/bash
# Wrapper script to execute Cargo commands against particular crates

BIN="$0"
ARG="$1" ; shift

# In case of empty or flag-only command line, pass through to Cargo directly
if [ -z "$ARG" ] || case $ARG in -*) ;; *) false;; esac; then
    cargo "$ARG" "$@"
    exit $?
fi

# Recognize some common commands and apply them to both crates
case "$ARG" in
    build|check|clean|test)
        for path in ./src/* ; do
            name="$(basename "$path")"
            if [ -d "./src/$name" ]; then
                "$BIN" "$name" "$ARG" "$@" || exit 1
            fi
        done
        exit $?
        ;;
esac

# Otherwise treat the first argument as crate moniker
CRATE="$ARG"
if [ ! -f "./src/$CRATE/Cargo.toml" ]; then
    echo >&2 "Usage: $BIN CRATE [CARGO_ARGS]"
    exit 2
fi

# Undertake default actions for some crates if no command is given
CMD="$1" ; shift
if [ -z "$CMD" ] || case $CMD in -*) ;; *) false;; esac; then
    # If what followed the crate name was a flag, put it back first.
    if [ -n "$CMD" ]; then
        set -- "$CMD" "$@"
    fi
    case "$CRATE" in
        server) CMD='run' ;;
    esac
fi

# For running binaries, use --manifest-path because we want to be in the root
# directory for the correct $CWD.
if [ "$CMD" = 'run' ]; then
    MANIFEST="./src/$CRATE/Cargo.toml"
    set -x  # echo on
    cargo "$CMD" --manifest-path="$MANIFEST" "$@"
else
    (
        set -x  # echo on
        cd "./src/$CRATE" && cargo "$CMD" "$@"
    )
fi
